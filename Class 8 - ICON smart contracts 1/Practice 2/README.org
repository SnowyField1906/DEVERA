* Practice 2
** Customize
#+begin_src java
import score.DictDB;

public DictDB<BigInteger, String> tokens = Context.newDictDB("tokens", String.class);
#+end_src


** 1. Develop ~mint~ method with ~uri~ parameter
#+begin_src java
@External()
public void mint(BigInteger _tokenId) {
    // simple access control - only the contract owner can mint new token
    Context.require(Context.getCaller().equals(Context.getOwner()));
    super._mint(Context.getCaller(), _tokenId);

    tokens.set(_tokenId, "http://127.0.0.1:9082/api/v3/token/" + _tokenId.toString());
}
#+end_src

** 2. Develop ~tokenURI~ method to get ~uri~ by ~tokenId~
#+begin_src java
@External(readonly=true)
public String getUri(BigInteger _tokenId) {
    return tokens.get(_tokenId);
}
#+end_src

** Make ~Goloop~ start
#+BEGIN_SRC bash
cd gochain-local
sudo ./run_gochain.sh start
export PATH=$PATH:/$HOME/goloop/bin
#+END_SRC

** Build and optimize jar
#+BEGIN_SRC bash
sudo ./gradlew build
sudo ./gradlew optimizedJar
#+END_SRC

** 3. Deploy ~irc3-token~ contract to local network
*** Input
#+BEGIN_SRC bash
goloop rpc sendtx deploy ./irc3-token/build/libs/irc3-token-0.9.0-optimized.jar \
    --uri http://127.0.0.1:9082/api/v3 \
    --key_store /$HOME/gochain-local/data/godWallet.json --key_password gochain \
    --nid 0x3 --step_limit 10000000000 \
    --content_type application/java \
    --param _name=IRC3Token \
    --param _symbol=IRC3T
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x0615bbc07a0771841e964dd8983ae130947181f7752ae48bc96f1524ea2ee4b4"
#+END_SRC

** Get transaction detail
*** Input
#+BEGIN_SRC bash
goloop rpc \
    --uri http://localhost:9082/api/v3 txresult 0x0615bbc07a0771841e964dd8983ae130947181f7752ae48bc96f1524ea2ee4b4
#+END_SRC

*** Result
#+BEGIN_SRC json
{
  "to": "cx0000000000000000000000000000000000000000",
  "cumulativeStepUsed": "0x417e994e",
  "stepUsed": "0x417e994e",
  "stepPrice": "0x2e90edd00",
  "eventLogs": [],
  "logsBloom": "0x
  "status": "0x1",
  "scoreAddress": "cx01c0738457f8ca20d5208877f233beb4adc24b3c",
  "blockHash": "0x5e49eac1200def2ee816025ae9d1f5c73ea0dc501a923e55e4765630e655ca3b",
  "blockHeight": "0x1c63",
  "txIndex": "0x0",
  "txHash": "0x0615bbc07a0771841e964dd8983ae130947181f7752ae48bc96f1524ea2ee4b4"
}
#+END_SRC

** 4. Send transaction to mint ~irc3-token~
*** Input
#+BEGIN_SRC bash
goloop rpc sendtx call \
    --to cx01c0738457f8ca20d5208877f233beb4adc24b3c \
    --uri http://127.0.0.1:9082/api/v3 \
    --key_store /$HOME/gochain-local/data/godWallet.json --key_password gochain \
    --nid 0x3 --step_limit 10000000 \
    --method mint \
    --param _tokenId=1
#+END_SRC

*** Result
#+BEGIN_SRC bash
"0x30409bbca4e4a27e7d2c554201c0beb5a17bef70089dc3685787da7a4904e2d8"
#+END_SRC

** 5. Call transaction to view ~irc3-token uri~
*** Input
#+BEGIN_SRC bash
goloop rpc \
    --uri http://localhost:9082/api/v3 call \
    --to cx01c0738457f8ca20d5208877f233beb4adc24b3c  \
    --method getUri \
    --param _tokenId=1
#+END_SRC

*** Result
#+BEGIN_SRC bash
"http://127.0.0.1:9082/api/v3/token/1"
#+END_SRC
